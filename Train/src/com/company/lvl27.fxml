<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.control.TextArea?>
<?import javafx.scene.control.TextField?>
<?import javafx.scene.layout.Pane?>
<?import javafx.scene.text.Font?>

<Pane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="780.0" prefWidth="1300.0" style="-fx-background-color: #FFE4B5;" xmlns="http://javafx.com/javafx/21" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.company.Main">
    <children>
        <TextField editable="false" layoutX="564.0" layoutY="35.0" prefHeight="50.0" prefWidth="474.0" style="-fx-background-color: transperent;" text="Выберите код с правильно использованными Переменной Char">
            <font>
                <Font size="15.0" />
            </font>
        </TextField>
        <Button alignment="TOP_CENTER" layoutX="511.0" layoutY="85.0" mnemonicParsing="false" onAction="#lvl277" prefHeight="277.0" prefWidth="500.0" style="-fx-background-color: #F0F8FF;" text="public class Program{ &#10;&#10;public static void main (String args[]){&#10;              person tom = new Person(&quot;Tom&quot;, -116):&#10;              System.out.println(tom.toString()):&#10;          }&#10;}&#10;record Person(String name, intage) {&#10;Person{&#10;if ( age&lt;1 || age &gt; 110){&#10;age = 18:&#10;}&#10;}&#10;}">
            <font>
                <Font size="13.0" />
            </font></Button>
        <Button layoutX="511.0" layoutY="402.0" mnemonicParsing="false" onAction="#lvl2777" prefHeight="277.0" prefWidth="500.0" style="-fx-background-color: #F0F8FF;" text="public class Contact {&#10;    &#10;    public Contact(String name, String email) {&#10;        this.name = name;&#10;        this.email = email;&#10;    }&#10;&#10;    public String getName() {&#10;        return name;&#10;    }&#10;&#10;    public String getEmail() {&#10;        return email;&#10;    }">
            <font>
                <Font size="13.0" />
            </font></Button>
        <TextArea editable="false" layoutX="10.0" layoutY="10.0" prefHeight="750.0" prefWidth="490.0" text="Начиная с версии Java 16 в язык была добавлена&#10; новая функциональность -Records(на &#10;русском нередко называют &quot;записями&quot;).&#10;Recordsпредставляют классы, которые &#10;предназначены для создания контейнеров&#10; неизменяемых данных. Кроме того, records &#10;позволяют упростить разработку, сократив объем кода.&#10;Для определения классов record&#10; применяется ключевое словоrecord, после которого идет &#10;название и далее в круглых скобках список полей record:&#10;&#10;&#9;record название (поле1, поле2,...полеN){&#10;// тело record&#10;}&#10;Рассмотрим следующий пример&#10;&#9;import java.util.Objects;&#10;&#10;&#9;public class Program{ &#10;&#10;class Person {&#10;private final String name;&#10;private final int age;&#10;&#10;Person(String name, int age) {&#10;this.name = name;&#10;this.age = age;&#10;}&#10;&#10;String name() { return name; }&#10;int age() { return age; }&#10;&#10;public boolean equals(Object o) {&#10;if (!(o instanceof Person)) return false;&#10;Person other = (Person) o;&#10;return other.name == name &amp;&amp; other.age == age;&#10;}&#10;&#10;public int hashCode() {&#10;return Objects.hash(name, age);&#10;}&#10;&#10;public String toString() {&#10;return String.format(&quot;Person[name=%s, age=%d]&quot;, name, age);&#10;}&#10;}&#10;Здесь определен класс Person, который определяет две константы - name и age:&#10;&#9;private final String name;&#10;private final int age;&#10;Их значения устанавливаются в конструкторе. Больше никак их установить &#10;мы не можем. &#10;Таким образом, после создания объекта Person они будут хранить&#10; неизменяемые данные.&#10;Для получения значений name и age предусмотрены одноименные методы:&#10;&#9;String name() { return name; }&#10;int age() { return age; }&#10;Кроме того, здесь переопределены унаследованные от класса Object &#10;методыequals(),hashCode()иtoString().&#10;В методеmainсоздаем один объект класса Person&#10; и выводит на консоль его текстовое &#10;представление:&#10;&#9;Person tom = new Person(&quot;Tom&quot;, 36);&#10;System.out.println(tom.toString());&#10;В итоге консоль нам выведет:&#10;Person[name=Tom, age=36]" />
    </children>
</Pane>
