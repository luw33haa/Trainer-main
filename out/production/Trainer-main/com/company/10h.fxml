<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.control.TextField?>
<?import javafx.scene.layout.Pane?>
<?import javafx.scene.text.Font?>

<Pane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="780.0" prefWidth="1300.0" style="-fx-background-color: #FFE4B5;" xmlns="http://javafx.com/javafx/21" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.company.Main">
    <children>
        <TextField editable="false" layoutX="413.0" layoutY="14.0" prefHeight="50.0" prefWidth="474.0" style="-fx-background-color: transperent;" text="10.Выберите код с правильно использованными Переменной Char">
            <font>
                <Font size="15.0" />
            </font>
        </TextField>
        <Button alignment="TOP_CENTER" layoutX="50.0" layoutY="85.0" mnemonicParsing="false" onAction="#finhard" prefHeight="332.0" prefWidth="371.0" style="-fx-background-color: #F0F8FF;" text="public static void main(String[] args) throws IOException {&#10;&#10;        try (ServerSocket server = new ServerSocket(8000)) {&#10;            System.out.println(&quot;Server started!&quot;);//&#10;&#10;            while (true)&#10;                try ( Phone phone = new Phone (server)){&#10;                    String request = phone.readLine();&#10;                    System.out.println(&quot;Request:&quot; + request);&#10;                    String response = (int) (Math.random() * 30 - 10) + &quot;&quot;;&#10;                    phone.writeLine(response);&#10;                    System.out.println(&quot;Response: &quot; + response);&#10;                } catch (NullPointerException e) {&#10;                    e.printStackTrace();&#10;                } catch (IOException e) {&#10;                    throw new RuntimeException(e);&#10;                }&#10;        }&#10;    }" />
        <Button layoutX="772.0" layoutY="75.0" mnemonicParsing="false" onAction="#finhard1" prefHeight="332.0" prefWidth="371.0" style="-fx-background-color: #F0F8FF;" text="public static void main(String[] args) throws IOException {&#10;&#10;        try (ServerSocket server = new ServerSocket()) {&#10;            System.out.println(&quot;Server started!&quot;);//&#10;&#10;            while (true)&#10;                try ( Phone phone = new Phone (server)){&#10;                    String request = phone.readLine();&#10;                    System.out.println(&quot;Request:&quot; + request);&#10;                    String response = (int) (Math.random() * 30 - 10) + &quot;&quot;;&#10;                    phone.writeLine(response);&#10;                    System.out.println(&quot;Response: &quot; + response);&#10;                } catch (NullPointerException e) {&#10;                    e.printStackTrace();&#10;                } catch (IOException e) {&#10;                    throw new RuntimeException(e);&#10;                }&#10;        }&#10;    }&#10;" />
      <Button layoutX="407.0" layoutY="444.0" mnemonicParsing="false" onAction="#finhard1" prefHeight="314.0" prefWidth="394.0" style="-fx-background-color: #F0F8FF;" text="public static void main(String[] args) throws IOException {&#10;&#10;        try (ServerSocket server = new ServerSocket(8000)) {&#10;            System.out.println(&quot;Server started!&quot;);//&#10;&#10;            while (true)&#10;                try ( Phone phone = new Phone (server)){&#10;                    String request = phone.readLine();&#10;                    System.out.println(&quot;Request:&quot; + request);&#10;                    String response = (int) (Math.random() * 30 - 10) + &quot;&quot;;         &#10;                    System.out.println(&quot;Response: &quot; + response);&#10;                } catch (NullPointerException e) {&#10;                    e.printStackTrace();&#10;                } catch (IOException e) {&#10;                    throw new RuntimeException(e);&#10;                }&#10;        }&#10;    }" />
    </children>
</Pane>
